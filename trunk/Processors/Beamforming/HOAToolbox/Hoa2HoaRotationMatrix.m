function Rot = Hoa2HoaRotationMatrix(hoaFmt,rotAxs,rotAng)
%
% Calculates a rotation matrix in the spherical harmonic domain.
%
% Rot = Hoa2HoaRotationMatrix(hoaFmt,rotAxs,rotAng)
%
%  - hoaFmt defines the spherical harmonic basis
%           (generated by GenerataHoaFmt.m)
%  - rotAxs is the rotation axis in cartesian coordinates
%  - rotAng is the rotation ange in radians. 

% Testing the input arguments
if isvector(rotAxs) && length(rotAxs)==3
    rotAxs = rotAxs(:) ;
else
    error('The rotation axis must be a vector with three components') ;
end
if ~(isscalar(rotAng)&&isreal(rotAng))
    error('The rotation angle must be a real value') ;
end

% Rotation matrix in cartesian coordinates
P = rotAxs * rotAxs.' ;
Q = cross(repmat(rotAxs,1,3),eye(3)) ;
RotXyz = P + (eye(3)-P)*cos(rotAng) + Q*sin(rotAng) ;

% Direction basis and corresponding spherical harmonic values
[azmRef,elvRef] = RegularPolyhedron(642) ;
[xyzRef(:,1),xyzRef(:,2),xyzRef(:,3)] = sph2cart(azmRef,elvRef,1) ;
SphHrmRef = SphericalHarmonicMatrix(hoaFmt,azmRef,elvRef) ;

% Rotated directionsand corresponding spherical harmonic values
xyzRot = xyzRef * RotXyz.' ;
[azmRot,elvRot] = cart2sph(xyzRot(:,1),xyzRot(:,2),xyzRot(:,3)) ;
SphHrmRot = SphericalHarmonicMatrix(hoaFmt,azmRot,elvRot) ;

% Rotation matrix in the spherical harmonic domain
Rot = SphHrmRot * pinv(SphHrmRef) ;